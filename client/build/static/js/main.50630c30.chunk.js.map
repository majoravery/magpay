{"version":3,"sources":["client/rowRenderer.jsx","client/PayslipFormInfo.jsx","client/PayslipFormBreakdown.jsx","client/PayslipExportStyles.jsx","client/PayslipExport.jsx","constants.js","client/Magbelle.jsx","index.jsx"],"names":["rowRenderer","row","setField","state","component","id","label","initialValue","type","key","className","htmlFor","name","defaultValue","onChange","e","target","value","inputMode","step","parseFloat","toFixed","sumType","choices","map","mode","i","modeId","modeLabel","PayslipFormInfo","info","updateSubtotal","Object","keys","table","PayslipFormBreakdown","breakdown","filter","cellMargin","marginTop","marginBottom","marginLeft","marginRight","borderOuter","borderStyle","borderColor","borderWidth","borderLeftWidth","borderTopWidth","borderInner","borderRightWidth","borderBottomWidth","styles","StyleSheet","create","body","padding","headerContainer","textAlign","width","addressContainer","companyName","fontSize","fontWeight","address","salarySlip","container","flexDirection","flexWrap","left","overflow","right","bottom","flex","display","tableRow","margin","infoLabelCol","infoLabelCell","wordBreak","infoInputCol","infoInputCell","breakdownHeaderCol","breakdownHeaderCell","breakdownInputLabelCol","breakdownInputLabelCell","breakdownInputCol","breakdownInputCell","position","breakdownOutputLabelCol","backgroundColor","breakdownOutputLabelCell","breakdownOutputCol","breakdownOutputCell","infoLabelColNett","infoInputColNett","footerCol","footerCell","paddingBottom","dollarSign","numericValue","stringValue","Font","register","family","src","InfoRows","displayDollarSign","style","PDFHeader","PDFInfo","rows","PDFBreakdown","charAt","toUpperCase","substr","PDFNett","PDFFooter","footer","PDF","EmailLink","buttonText","pdfFileName","props","useState","dataUri","setDataUri","sentStatus","setSentStatus","sendEmail","fetch","method","headers","credentials","JSON","stringify","then","res","json","rejected","length","accepted","catch","console","error","document","blob","url","loading","log","callback","a","FileReader","onload","result","readAsDataURL","blobToDataURL","onClick","PayslipExport","nameOfEmployee","salaryPeriod","join","replace","height","paddingTop","to","INFO","sections","BREAKDOWN","FOOTER","MODE_OF_PAYMENTS","bottomLeft","PrivateRoute","loggedIn","children","rest","render","location","pathname","from","push","Magbelle","Cookies","get","fields","section","reduce","all","each","concat","item","bind","updateTotal","renderHomepage","renderPayslip","renderExport","this","earningsOutput","deductionsOutput","additionsOutput","total","setState","nettPayment","sectionId","outputKey","inputKeys","inputSum","includes","sum","href","outputForPdf","path","exact","master","modeOfPayment","Component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.50630c30.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nexport function rowRenderer(row, setField, state) {\n  const { id, label, initialValue, type } = row;\n  let component;\n  switch(type) {\n    case 'string':\n      component = (\n        <Fragment key={id}>\n          <div className=\"label\"><label htmlFor={id}>{label}</label></div>\n          <div className=\"input\">\n            <input\n              className=\"input-field\"\n              id={id}\n              name={id} \n              type=\"text\"\n              defaultValue={initialValue ? initialValue : ''}\n              onChange={e => setField(id, e.target.value) }\n            />\n          </div>\n        </Fragment>\n      );\n      break;\n    case 'number':\n      component = (\n        <Fragment key={id}>\n          <div className=\"label\"><label htmlFor={id}>{label}</label></div>\n          <div className=\"input\">\n            <input\n              className=\"input-field\"\n              id={id}\n              name={id} \n              type=\"number\"\n              inputMode=\"decimal\"\n              step=\"0.01\"\n              onChange={e => {\n                const value = parseFloat(e.target.value).toFixed(2);\n                setField(id, value)\n              }}\n            />\n          </div>\n        </Fragment>\n      );\n      break;\n    case 'auto':\n      component = (\n        <Fragment key={id}>\n          <div className={`label ${row.sumType}`}>{label}</div>\n          <div className={`output ${row.sumType}`}><span id={id}>{state[id]}</span></div>\n        </Fragment>\n      );\n      break;\n    case 'date':\n      component = (\n        <Fragment key={id}>\n          <div className=\"label\"><label htmlFor={id}>{label}</label></div>\n          <div className=\"input\">\n            <input\n              className=\"input-field\"\n              id={id}\n              name={id} \n              type=\"date\"\n              onChange={e => setField(id, e.target.value) }\n            />\n          </div>\n        </Fragment>\n      );\n      break;\n    case 'month':\n      component = (\n        <Fragment key={id}>\n          <div className=\"label\"><label htmlFor={id}>{label}</label></div>\n          <div className=\"input\">\n            <input\n              className=\"input-field\"\n              id={id}\n              name={id} \n              type=\"month\"\n              onChange={e => setField(id, e.target.value) }\n            />\n          </div>\n        </Fragment>\n      );\n      break;\n    case 'radio':\n      component = (\n        <Fragment key={id}>\n          <div className=\"label radio-label\"><label htmlFor={id}>{label}</label></div>\n          <div className=\"radio-choices\">\n            {row.choices.map((mode, i) => {\n              const { id: modeId, label: modeLabel } = mode;\n              \n              return (\n                <div key={modeId} className=\"radio-choice\">\n                  <input\n                    className=\"radio-choice-field\"\n                    type=\"radio\"\n                    id={modeId}\n                    name={id}\n                    value={modeId}\n                    onChange={e => setField(id, e.target.value)}\n                  />\n                  <label className=\"radio-choice-label\" htmlFor={modeId}>{modeLabel}</label>\n                </div>\n              );\n            })}\n          </div>\n        </Fragment>\n      );\n      break;\n    default:\n      break;\n  }\n\n  return component;\n}","import React from 'react';\n\nimport { rowRenderer } from './rowRenderer';\n\nimport './PayslipForm.scss';\n\nconst PayslipFormInfo = ({ info, setField, updateSubtotal, state }) => {\n  return (\n    Object.keys(info).map(key => {\n      const table = info[key];\n      return (\n        <section\n          key={key}\n          id={key}\n          className=\"infoTable\"\n          onChange={() => {\n            if (key === 'cpfContribution') {\n              updateSubtotal(key, false);\n            }\n          }}\n        >\n          {table.map(row => rowRenderer(row, setField, state))}\n        </section>\n      );\n    })\n  );\n}\n\nexport default PayslipFormInfo;\n","import React, { Fragment } from 'react';\n\nimport { rowRenderer } from './rowRenderer';\n\nimport './PayslipForm.scss';\n\nconst PayslipFormBreakdown = ({ breakdown, setField, updateSubtotal, state }) => {\n  return (\n    <Fragment>\n      {Object\n        .keys(breakdown)\n        .filter(key => key !== 'nett')\n        .map(key => {\n          const table = breakdown[key];\n          return (\n            <section key={key} id={key} onChange={() => updateSubtotal(key, true)}>\n              <div className=\"header\">{key}</div>\n              {table.map(row => rowRenderer(row, setField, state))}\n            </section>\n          );\n        })}\n\n      <section id=\"final\">\n        {Object\n        .keys(breakdown)\n        .filter(key => key === 'nett')\n        .map(key => {\n          const table = breakdown[key];\n          return table.map(row => rowRenderer(row, setField, state))\n        })}\n      </section>\n    </Fragment>\n  );\n};\n\nexport default PayslipFormBreakdown;\n","import { StyleSheet } from '@react-pdf/renderer';\n\nconst BG_COLOR = '#eee';\nconst DARKER_BG_COLOR = '#c6c6c6';\nconst BORDER_COLOR = '#6c6c6c'\nconst BORDER_STYLE = 'solid'\nconst COL_WIDTH_QUARTER = '25%';\nconst COL_WIDTH_HALF = '50%';\nconst COL_WIDTH_THREE_QUARTERS = '75%';\nconst COL_WIDTH_FULL = '100%';\nconst NORMAL_FONT_SIZE = 10;\n\nconst cellMargin = {\n  marginTop: 4,\n  marginBottom: 4,\n  marginLeft: 8,\n  marginRight: 8,\n}\nconst borderOuter = {\n  borderStyle: BORDER_STYLE, \n  borderColor: BORDER_COLOR,\n  borderWidth: 1, \n  borderLeftWidth: 0, \n  borderTopWidth: 0,\n};\nconst borderInner = {\n  borderStyle: BORDER_STYLE, \n  borderColor: BORDER_COLOR,\n  borderWidth: 1, \n  borderRightWidth: 0, \n  borderBottomWidth: 0,\n}\n\nconst styles = StyleSheet.create({\n  body: {\n    padding: \"50px 45px\",\n  },\n\n  /** Header section */\n  headerContainer: {\n    marginBottom: 20,\n    textAlign: \"center\",\n    width: COL_WIDTH_FULL,\n  },\n  addressContainer: {\n    marginTop: 8,\n    marginBottom: 4,\n  },\n  companyName: {\n    fontSize: 19,\n    fontWeight: \"bold\",\n  },\n  address: {\n    fontSize: 12,\n    fontWeight: \"bold\",\n    marginBottom: 2,\n  },\n  salarySlip: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    marginTop: 8,\n    marginBottom: 8,\n    marginLeft: 0,\n    marginRight: 0,\n  },\n\n  /** Container */\n  container: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n  left: {\n    marginRight: 20,\n    overflow: \"hidden\",\n    width: \"48%\",\n  },\n  right: {\n    overflow: \"hidden\",\n    width: \"48%\",\n  },\n  bottom: {\n    flex: \"1 0 100%\",\n    width: COL_WIDTH_FULL,\n  },\n\n  /** Basic table properties */\n  table: { \n    ...borderOuter,\n    display: \"table\", \n    width: \"auto\", \n    marginBottom: 16,\n  }, \n  tableRow: { \n    margin: \"auto\", \n    flexDirection: \"row\",\n  },  \n\n  /** Info table */ \n  infoLabelCol: { \n    ...borderInner,\n    width: COL_WIDTH_HALF, \n  },   \n  infoLabelCell: { \n    ...cellMargin,\n    fontSize: NORMAL_FONT_SIZE,\n    wordBreak: \"break-word\",\n  },\n  infoInputCol: { \n    ...borderInner,\n    width: COL_WIDTH_HALF, \n  },   \n  infoInputCell: { \n    ...cellMargin,\n    fontSize: NORMAL_FONT_SIZE,\n    textAlign: \"right\",\n  },\n\n  /** Breakdown table */\n  breakdownHeaderCol: { \n    ...borderInner,\n    width: COL_WIDTH_FULL,\n  },   \n  breakdownHeaderCell: {\n    ...cellMargin,\n    fontSize: NORMAL_FONT_SIZE,\n    textAlign: \"center\",\n  }, \n  breakdownInputLabelCol: { \n    ...borderInner,\n    width: COL_WIDTH_THREE_QUARTERS, \n  },   \n  breakdownInputLabelCell: { \n    ...cellMargin,\n    fontSize: NORMAL_FONT_SIZE,\n  },\n  breakdownInputCol: { \n    ...borderInner,\n    width: COL_WIDTH_QUARTER, \n  },   \n  breakdownInputCell: { \n    ...cellMargin,\n    fontSize: NORMAL_FONT_SIZE,\n    position: \"relative\",\n    textAlign: \"right\",\n  },\n  breakdownOutputLabelCol: { \n    ...borderInner,\n    backgroundColor: BG_COLOR,\n    width: COL_WIDTH_THREE_QUARTERS, \n  },   \n  breakdownOutputLabelCell: { \n    ...cellMargin,\n    fontSize: NORMAL_FONT_SIZE,\n  },\n  breakdownOutputCol: { \n    ...borderInner,\n    backgroundColor: BG_COLOR,\n    width: COL_WIDTH_QUARTER, \n  },   \n  breakdownOutputCell: { \n    ...cellMargin,\n    fontSize: NORMAL_FONT_SIZE,\n    position: \"relative\",\n    textAlign: \"right\",\n  },\n  \n  /** Nett payment table */\n  infoLabelColNett: { \n    ...borderInner,\n    backgroundColor: DARKER_BG_COLOR,\n    width: COL_WIDTH_THREE_QUARTERS, \n  },\n  infoInputColNett: { \n    ...borderInner,\n    backgroundColor: DARKER_BG_COLOR,\n    width: COL_WIDTH_QUARTER, \n  },  \n\n  /** Footer table */\n  footerCol: { \n    ...borderInner,\n    width: COL_WIDTH_HALF, \n  },   \n  footerCell: { \n    ...cellMargin,\n    fontSize: NORMAL_FONT_SIZE,\n    paddingBottom: 38,\n    wordBreak: \"break-word\",\n  },\n\n  dollarSign: {\n    left: 0,\n    position: \"absolute\",\n    textAlign: \"left\",\n    width: COL_WIDTH_HALF,\n  },\n  numericValue: {\n    position: \"absolute\",\n    right: 0,\n    textAlign: \"right\",\n    width: COL_WIDTH_HALF,\n  },\n  stringValue: {\n    position: \"absolute\",\n    textAlign: \"left\",\n    width: COL_WIDTH_FULL,\n  }\n});\n\nexport default { styles };","import React, { Fragment, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Page, Text, View, Document, Font, PDFViewer, PDFDownloadLink, BlobProvider } from '@react-pdf/renderer';\n\nimport { BACKEND_URL } from '../constants';\n\nimport styles from './PayslipExportStyles';\n\nimport './PayslipExport.scss';\n\nconst {\n  infoLabelCol,\n  infoInputCol,\n  body,\n  headerContainer,\n  companyName,\n  addressContainer,\n  address,\n  salarySlip,\n  container,\n  left,\n  right,\n  bottom,\n  breakdownHeaderCol,\n  breakdownHeaderCell,\n  breakdownInputLabelCol,\n  breakdownInputLabelCell,\n  breakdownInputCol,\n  breakdownInputCell,\n  breakdownOutputLabelCol,\n  breakdownOutputLabelCell,\n  breakdownOutputCol,\n  breakdownOutputCell,\n  infoLabelColNett,\n  infoLabelCell,\n  infoInputColNett,\n  infoInputCell,\n  table,\n  tableRow,\n  footerCol,\n  footerCell,\n  dollarSign,\n  numericValue,\n  stringValue,\n} = styles.styles; // NOTE: still a bit confused about this tbh\n\nFont.register({\n  family: 'Oswald',\n  src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf'\n});\n\nconst InfoRows = ({ id, label, state, displayDollarSign }) => (\n  <View style={tableRow} key={id}>\n    <View style={infoLabelCol}>\n      <View style={infoLabelCell}>\n        <Text>{label}</Text>\n      </View>\n    </View>\n    <View style={infoInputCol}>\n      <View style={infoInputCell}>\n        {displayDollarSign\n          ? <Fragment><Text style={dollarSign}>$</Text><Text style={numericValue}>{state[id]}</Text></Fragment>\n          : <Text style={stringValue}>{state[id]}</Text>}\n      </View>\n    </View>\n  </View>\n);\n\nconst PDFHeader = () => (\n  <View style={headerContainer}>\n    <Text style={companyName}>Magbelle Hair Salon</Text>\n    <View style={addressContainer}>\n      <Text style={address}>18 Yishun Avenue 9</Text>\n      <Text style={address}>Junction Nine #02-49</Text>\n      <Text style={address}>Singapore 768897</Text>\n    </View>\n    <Text style={salarySlip}>Salary Slip</Text>\n  </View>\n);\n\nconst PDFInfo = ({ info, state }) => (\n  <Fragment>\n    <View style={left}>\n      {Object.keys(info)\n        .filter(key => key === 'topLeft' || key === 'bottomLeft')\n        .map(key => {\n          const rows = info[key];\n          return (\n            <View style={table} key={key}>\n              {rows.map(row => <InfoRows key={row.id} state={state} {...row} />)}\n            </View>\n          )\n        })}\n    </View>\n    <View style={right}>\n      {Object.keys(info)\n        .filter(key => key === 'topRight' || key === 'cpfContribution')\n        .map(key => {\n          const rows = info[key];\n          return (\n            <View style={table} key={key}>\n              {rows.map(row => <InfoRows key={row.id} state={state} {...row} displayDollarSign={key === 'cpfContribution'} />)}\n            </View>\n          )\n        })}\n    </View>\n  </Fragment>\n);\n\nconst PDFBreakdown = ({ breakdown, state }) => (\n  Object.keys(breakdown)\n    .filter(key => key !== 'nett')\n    .map(key => (\n      <View style={table} key={`${key}-table`}>\n        <View style={tableRow}>\n          <View style={breakdownHeaderCol}>\n            <View style={breakdownHeaderCell}>\n              {/* Unfort react-pdf StyleSheet does not support text-transform: capitalize */}\n              <Text>{key.charAt(0).toUpperCase()}{key.substr(1)}</Text>\n            </View>\n          </View>\n        </View>\n        \n        {breakdown[key]\n          .filter(row => row.type !== 'auto')\n          .map(({ id, label }) => (\n            <View style={tableRow} key={id}>\n              <View style={breakdownInputLabelCol}>\n                <View style={breakdownInputLabelCell}>\n                  <Text>{label}</Text>\n                </View>\n              </View>\n              <View style={breakdownInputCol}>\n                <View style={breakdownInputCell}>\n                  <Text style={dollarSign}>$</Text><Text style={numericValue}>{state[id]}</Text>\n                </View>\n              </View>\n            </View>\n          ))}\n\n        {breakdown[key]\n          .filter(row => row.type === 'auto')\n          .map(({ id, label }) => (\n            <View style={tableRow} key={id}>\n              <View style={breakdownOutputLabelCol}>\n                <View style={breakdownOutputLabelCell}>\n                  <Text>{label}</Text>\n                </View>\n              </View>\n              <View style={breakdownOutputCol}>\n                <View style={breakdownOutputCell}>\n                  <Text style={dollarSign}>$</Text><Text style={numericValue}>{state[id]}</Text>\n                </View>\n              </View>\n            </View>\n          ))}\n      </View>\n    ))\n);\n\nconst PDFNett = ({ breakdown, state }) => {\n  const { id, label } = breakdown['nett'][0]; // There's only one item in the \"section\"\n  return (\n    <View style={table}>\n      <View style={tableRow} key={id}>\n        <View style={infoLabelColNett}><View style={infoLabelCell}>\n          <Text>{label}</Text>\n        </View></View>\n        <View style={infoInputColNett}><View style={infoInputCell}>\n          <Text style={dollarSign}>$</Text><Text style={numericValue}>{state[id]}</Text>\n        </View></View>\n      </View>\n    </View>\n  );\n};\n\nconst PDFFooter = ({ footer }) => (\n  <View style={table}>\n    <View style={tableRow}>\n      {Object.keys(footer)\n        .map(key => footer[key][0]) // There's only one item in each \"section\"\n        .map(({ id, label }) => (\n          <View style={footerCol} key={id}><View style={footerCell}>\n            <Text>{label}</Text>\n          </View></View>\n        ))\n      }\n    </View>\n  </View>\n);\n\nconst PDF = ({ info, breakdown, footer, state }) => (\n  <Document>\n    <Page style={body}>\n      <PDFHeader />\n\n      <View style={container}>\n        <PDFInfo info={info} state={state} />\n        \n        <View style={bottom}>\n          <PDFBreakdown breakdown={breakdown} state={state} />\n          <PDFNett breakdown={breakdown} state={state} />\n          <PDFFooter footer={footer} />\n        </View>\n      </View>\n    </Page>\n  </Document>\n);\n\nfunction blobToDataURL(blob, callback) {\n  const a = new FileReader();\n  a.onload = function(e) {\n    callback(e.target.result);\n  }\n  a.readAsDataURL(blob);\n}\n\nconst EmailLink = ({ pdfFileName, ...props }) => {\n  const [dataUri, setDataUri] = useState(null);\n  const [sentStatus, setSentStatus] = useState(null);\n  let component;\n  let buttonText;\n\n  const sendEmail = () => {\n    setSentStatus(false);\n    fetch(`${BACKEND_URL}/email`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({ \n        dataUri,\n        pdfFileName,\n        state: props.state,\n      }),\n    })\n      .then(res => res.json())\n      .then(({ res }) => {\n        const sentStatus = !res.rejected.length && !!res.accepted.length;\n        setSentStatus(sentStatus);\n      })\n      .catch(console.error);\n  }\n\n  return (\n    <BlobProvider document={<PDF {...props} />}>\n      {({ blob, url, loading, error }) => {\n        console.log({ blob, url, loading, error });\n\n        if (blob) {\n          blobToDataURL(blob, setDataUri);\n        }\n        \n        if (error || (!loading && !url)) {\n          component = <p className=\"exportText\">Error</p>;\n        } else if (!error && !loading && url) {\n\n          if (sentStatus === null) {\n            buttonText = 'Email PDF';\n          } else {\n            buttonText = sentStatus ? 'Sent!' : 'Sending...';\n          }\n\n          component = (\n            <button onClick={sendEmail} className=\"exportButton\">{buttonText}</button>\n          );\n        } else {\n          component = <p className=\"exportText\">Loading</p>;\n        }\n\n        return component;\n      }}\n    </BlobProvider>\n  );\n}\n\nconst DownloadLink = ({ pdfFileName, ...props }) => {\n  let component;\n\n  return (\n    <PDFDownloadLink document={<PDF {...props} />} fileName={pdfFileName}>\n      {({ blob, url, loading, error }) => {\n        component = loading ? <p className=\"exportText\">Loading document...</p> : <button onClick={() => {}} className=\"exportButton\">Download PDF</button>\n\n        return <div className=\"exportContainer\">{component}</div>;\n      }}\n    </PDFDownloadLink>\n  );\n};\n\nconst PayslipExport = props => {\n  const { nameOfEmployee, salaryPeriod } = props.state;\n\n  const pdfFileName = [nameOfEmployee, salaryPeriod].join('_').replace(' ', '-');\n\n  return (\n    <div style={{ width: '100%', height: '100%', padding: '1em' }}>\n      <PDFViewer width=\"100%\" height=\"85%\"><PDF {...props} /></PDFViewer>\n      {/* <DownloadLink pdfFileName={pdfFileName} {...props} /> */}\n      <section style={{ width: '100%', height: '15%', paddingTop: '32px' }} id=\"nextSteps\">\n        <div className=\"formButton\">\n          <Link to=\"/payslip/new\">Back</Link>\n        </div>\n        <div className=\"formButton\">\n          <EmailLink pdfFileName={pdfFileName} {...props} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default PayslipExport;\n","export const BACKEND_URL = 'http://localhost:8001';\n","import React, { Fragment, Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Link } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\n\nimport PayslipFormInfo from './PayslipFormInfo';\nimport PayslipFormBreakdown from './PayslipFormBreakdown';\nimport PayslipExport from './PayslipExport';\nimport { BACKEND_URL } from '../constants';\n\nimport './index.scss';\n\nimport { sections } from '../form.json';\n\nconst INFO = sections.info;\nconst BREAKDOWN = sections.breakdown;\nconst FOOTER = sections.footer;\nconst MODE_OF_PAYMENTS = INFO.bottomLeft.filter(row => row.id === 'modeOfPayment')[0].choices;\n\nfunction PrivateRoute({ loggedIn, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        !!loggedIn ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location }\n            }}\n            push\n          />\n        )\n      }\n    />\n  );\n}\n\nclass Magbelle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: !!Cookies.get('magbelle_logged_in'),\n    };\n    this.fields = {};\n    \n    // there has to be a better way to do these two tbh\n    // Initiailising state for all the output items\n    [INFO, BREAKDOWN].map(section => (\n      Object.keys(section)\n        .map(key => section[key])\n        .reduce((all, each) => (all.concat(each)), []) // Flatten array\n        .filter(key => key.type === 'auto')\n        .map(item => this.state[item.id] = item.initialValue ? item.initialValue : 0)\n    ));\n\n    // Initiailising this object for all input fields\n    [INFO, BREAKDOWN].map(section => (\n      Object.keys(section)\n        .map(key => section[key])\n        .reduce((all, each) => (all.concat(each)), []) // Flatten array\n        .filter(key => key.type === 'number')\n        .map(item => this.fields[item.id] = item.initialValue ? item.initialValue : parseFloat(0).toFixed(2))\n    ));\n\n    // Initiailising this object for all input fields\n    [INFO, BREAKDOWN].map(section => (\n      Object.keys(section)\n        .map(key => section[key])\n        .reduce((all, each) => (all.concat(each)), []) // Flatten array\n        .filter(key => key.type !== 'number' && key.type !== 'auto')\n        .map(item => this.fields[item.id] = item.initialValue ? item.initialValue : '')\n    ));\n\n    this.setField = this.setField.bind(this);\n    this.updateSubtotal = this.updateSubtotal.bind(this);\n    this.updateTotal = this.updateTotal.bind(this);\n    this.renderHomepage = this.renderHomepage.bind(this);\n    this.renderPayslip = this.renderPayslip.bind(this);\n    this.renderExport = this.renderExport.bind(this);\n  }\n\n  get outputForPdf() {\n    let master = {\n      ...this.state,\n      ...this.fields,\n    };\n    master = {\n      ...master,\n      modeOfPayment: this.fields.modeOfPayment ? MODE_OF_PAYMENTS.filter(mode => mode.id === this.fields.modeOfPayment)[0].label : '',\n    }\n\n    return master;\n  }\n\n  setField(id, value) {\n    this.fields[id] = value;\n  }\n\n  updateTotal() {\n    const { earningsOutput, deductionsOutput, additionsOutput } = this.state;\n    const total = parseFloat(earningsOutput) - parseFloat(deductionsOutput) + parseFloat(additionsOutput);\n    this.setState({ nettPayment: parseFloat(total).toFixed(2) });\n  }\n\n  updateSubtotal(sectionId, updateTotal) {\n    if (!sectionId) {\n      return;\n    }\n    const outputKey = `${sectionId}Output`;\n    const inputKeys = (BREAKDOWN[sectionId] || INFO[sectionId])\n      .filter(row => row.type !== 'auto')\n      .map(row => row.id);\n    const inputSum = Object.keys(this.fields)\n      .filter(item => inputKeys.includes(item))\n      .reduce((sum, item) => parseFloat(sum) + parseFloat(this.fields[item]), 0);\n    this.setState({ [outputKey]: parseFloat(inputSum).toFixed(2) }, updateTotal ? this.updateTotal : null);\n  }\n\n  renderHomepage() {\n    const { loggedIn } = this.state;\n    let component;\n\n    const loginPromise = () => (\n      Promise.resolve()\n    )\n\n    if (loggedIn) {\n      component = (\n        <Fragment>\n          {/* <button className=\"button\" onClick={() => {}}>Create pay slip from template</button> */}\n          <Link to=\"/payslip/new/\" className=\"button\">Create new pay slip</Link>\n        </Fragment>\n      );\n    } else {\n      component = (<a href={`${BACKEND_URL}/login`} className=\"button\">Login</a>);\n    }\n\n    return (\n      <div className=\"homepageContainer\">\n        <h2 style={{ marginTop: 0, fontSize: '1.7em', }}>Magbelle Hair Salon<br/>Pay Slip Creator</h2>\n        {component}\n      </div>\n    );\n  }\n\n  renderPayslip() {\n    return (\n      <div id=\"main\">\n        <h1 className=\"title\">Create new pay slip</h1>\n        <PayslipFormInfo info={INFO} setField={this.setField} updateSubtotal={this.updateSubtotal} state={this.state} />\n        <PayslipFormBreakdown breakdown={BREAKDOWN} setField={this.setField} updateSubtotal={this.updateSubtotal} state={this.state} />\n        <section id=\"nextSteps\">\n          <div className=\"formButton\">\n            <Link to=\"/\">Back</Link>\n          </div>\n          <div className=\"formButton\" id=\"generatePdf\">\n            <Link to=\"/payslip/export\">Generate PDF</Link>\n          </div>\n        </section>\n      </div>\n    );\n  }\n\n  renderExport() {\n    return (\n      <PayslipExport info={INFO} breakdown={BREAKDOWN} footer={FOOTER} state={this.outputForPdf} />\n    );\n  }\n\n  render() {\n    const { loggedIn } = this.state;\n    return (\n      <Router>\n        {/* Rendering homepage component here as children doesn't work - it appears on top of everything else, not sure why*/}\n        <Route path=\"/\" exact component={this.renderHomepage} />\n        <PrivateRoute loggedIn={loggedIn} path=\"/payslip/new/\">\n          {this.renderPayslip()}\n        </PrivateRoute>\n        <PrivateRoute loggedIn={loggedIn} path=\"/payslip/export/\">\n          {this.renderExport()}\n        </PrivateRoute>\n      </Router>\n    );\n  }\n}\n\n\nexport default Magbelle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Magbelle from './client/Magbelle';\n\nReactDOM.render(<Magbelle />, document.getElementById('root'));\n"],"sourceRoot":""}